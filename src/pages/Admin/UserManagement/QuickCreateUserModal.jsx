import React, { useState } from "react";
import { Modal, Form, Input, message, Typography } from "antd";
import { MailOutlined, UserAddOutlined } from "@ant-design/icons";
import { userService } from "../../../services";

const { Text } = Typography;

const QuickCreateUserModal = ({ visible, onCancel, onSuccess }) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);

  const handleSubmit = async () => {
    try {
      const values = await form.validateFields();
      setLoading(true);

      const response = await userService.createUserWithEmail(values.email);

      message.success(
        `T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng! ID: ${response.userId || "N/A"}`
      );

      form.resetFields();
      onSuccess(); // Reload user list
      onCancel(); // Close modal
    } catch (error) {
      console.error("Error creating user with email:", error);
      message.error("Kh√¥ng th·ªÉ t·∫°o t√†i kho·∫£n! Vui l√≤ng th·ª≠ l·∫°i.");
    } finally {
      setLoading(false);
    }
  };

  const handleCancel = () => {
    form.resetFields();
    onCancel();
  };

  return (
    <Modal
      title={
        <div style={{ display: "flex", alignItems: "center", gap: "8px" }}>
          <UserAddOutlined style={{ color: "#1890ff" }} />
          <span>‚ö° T·∫°o T√†i Kho·∫£n Nhanh</span>
        </div>
      }
      open={visible}
      onOk={handleSubmit}
      onCancel={handleCancel}
      confirmLoading={loading}
      okText="T·∫°o t√†i kho·∫£n"
      cancelText="H·ªßy"
      width={500}
      destroyOnClose
    >
      <div style={{ padding: "16px 0" }}>
        <div
          style={{
            background: "linear-gradient(135deg, #e6f7ff 0%, #f0f9ff 100%)",
            padding: "16px",
            borderRadius: "8px",
            marginBottom: "20px",
            border: "1px solid #d1ecf1",
          }}
        >
          <Text type="secondary" style={{ fontSize: "14px" }}>
            üí° <strong>T·∫°o nhanh:</strong> Ch·ªâ c·∫ßn nh·∫≠p email, h·ªá th·ªëng s·∫Ω t·ª±
            ƒë·ªông t·∫°o t√†i kho·∫£n v·ªõi th√¥ng tin c∆° b·∫£n. B·∫°n c√≥ th·ªÉ c·∫≠p nh·∫≠t th√¥ng
            tin chi ti·∫øt sau.
          </Text>
        </div>

        <Form form={form} layout="vertical" size="large">
          <Form.Item
            name="email"
            label="Email"
            rules={[
              { required: true, message: "Vui l√≤ng nh·∫≠p email!" },
              { type: "email", message: "Email kh√¥ng h·ª£p l·ªá!" },
            ]}
            hasFeedback
          >
            <Input
              prefix={<MailOutlined style={{ color: "#1890ff" }} />}
              placeholder="example@email.com"
              size="large"
              style={{ borderRadius: "8px" }}
            />
          </Form.Item>
        </Form>

        <div
          style={{
            background: "#fff7e6",
            padding: "12px",
            borderRadius: "6px",
            border: "1px solid #ffd591",
            marginTop: "16px",
          }}
        >
          <Text style={{ fontSize: "12px", color: "#d46b08" }}>
            ‚ö†Ô∏è <strong>L∆∞u √Ω:</strong> T√†i kho·∫£n ƒë∆∞·ª£c t·∫°o s·∫Ω c√≥ role m·∫∑c ƒë·ªãnh l√†
            "resident". B·∫°n c√≥ th·ªÉ thay ƒë·ªïi role v√† c·∫≠p nh·∫≠t th√¥ng tin chi ti·∫øt
            trong m√†n h√¨nh ch·ªânh s·ª≠a.
          </Text>
        </div>
      </div>
    </Modal>
  );
};

export default QuickCreateUserModal;
